{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amararajavidyalayam\\\\Downloads\\\\task-management-web-app\\\\src\\\\modals\\\\AddEditBoardModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport crossIcon from \"../assets/icon-cross.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport \"../styles/BoardModals.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEditBoardModal(_ref) {\n  _s();\n\n  let {\n    type,\n    setIsBoardModalOpen\n  } = _ref;\n  const dispatch = useDispatch();\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [newColumns, setNewColumns] = useState([{\n    name: \"Todo\",\n    tasks: [],\n    id: uuidv4()\n  }, {\n    name: \"Doing\",\n    tasks: [],\n    id: uuidv4()\n  }]);\n  const [isValid, setIsValid] = useState(true);\n  const board = useSelector(state => state.boards).find(board => board.isActive);\n\n  if (type === \"edit\" && isFirstLoad) {\n    setNewColumns(board.columns.map(col => {\n      return { ...col,\n        id: uuidv4()\n      };\n    }));\n    setName(board.name);\n    setIsFirstLoad(false);\n  }\n\n  const validate = () => {\n    setIsValid(false);\n\n    if (!name.trim()) {\n      return false;\n    }\n\n    for (let i = 0; i < newColumns.length; i++) {\n      if (!newColumns[i].name.trim()) {\n        return false;\n      }\n    }\n\n    setIsValid(true);\n    return true;\n  };\n\n  const onChange = (id, newValue) => {\n    setNewColumns(prevState => {\n      const newState = [...prevState];\n      const column = newState.find(col => col.id === id);\n      column.name = newValue;\n      return newState;\n    });\n  };\n\n  const onDelete = id => {\n    setNewColumns(prevState => prevState.filter(el => el.id !== id));\n  };\n\n  const onSubmit = type => {\n    setIsBoardModalOpen(false);\n\n    if (type === \"add\") {\n      dispatch(boardsSlice.actions.addBoard({\n        name,\n        newColumns\n      }));\n    } else {\n      dispatch(boardsSlice.actions.editBoard({\n        name,\n        newColumns\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container dimmed\",\n    onClick: e => {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n\n      setIsBoardModalOpen(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [type === \"edit\" ? \"Edit\" : \"Add new\", \" board\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"board-name-input\",\n        children: \"Board Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => setName(e.target.value),\n          id: \"board-name-input\",\n          type: \"text\",\n          placeholder: \"e.g. Web Design\",\n          className: !isValid && !name.trim() ? \"red-border\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), !isValid && !name.trim() && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cant-be-empty-span text-L\",\n          children: \" Can't be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Board Columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-columns\",\n        children: newColumns.map((column, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => {\n                  onChange(column.id, e.target.value);\n                },\n                type: \"text\",\n                value: column.name,\n                className: !isValid && !column.name.trim() ? \"red-border\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), !isValid && !column.name.trim() && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cant-be-empty-span text-L\",\n                children: [\" \", \"Can't be empty\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: crossIcon,\n              alt: \"delete-column-icon\",\n              onClick: () => {\n                onDelete(column.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setNewColumns(state => [...state, {\n            name: \"\",\n            tasks: [],\n            id: uuidv4()\n          }]);\n        },\n        className: \"add-column-btn btn-light\",\n        children: \"+ Add New Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const isValid = validate();\n          if (isValid === true) onSubmit(type);\n        },\n        className: \"create-btn\",\n        children: type === \"add\" ? \"Create New Board\" : \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditBoardModal, \"jZsQuHm7x9qRxt/vG/1SitrCXAc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddEditBoardModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditBoardModal\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","crossIcon","boardsSlice","v4","uuidv4","AddEditBoardModal","type","setIsBoardModalOpen","dispatch","isFirstLoad","setIsFirstLoad","name","setName","newColumns","setNewColumns","tasks","id","isValid","setIsValid","board","state","boards","find","isActive","columns","map","col","validate","trim","i","length","onChange","newValue","prevState","newState","column","onDelete","filter","el","onSubmit","actions","addBoard","editBoard","e","target","currentTarget","value","index"],"sources":["C:/Users/Amararajavidyalayam/Downloads/task-management-web-app/src/modals/AddEditBoardModal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport crossIcon from \"../assets/icon-cross.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport \"../styles/BoardModals.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function AddEditBoardModal({ type, setIsBoardModalOpen }) {\n  const dispatch = useDispatch();\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [newColumns, setNewColumns] = useState([\n    { name: \"Todo\", tasks: [], id: uuidv4() },\n    { name: \"Doing\", tasks: [], id: uuidv4() },\n  ]);\n  const [isValid, setIsValid] = useState(true);\n  const board = useSelector((state) => state.boards).find(\n    (board) => board.isActive\n  );\n\n  if (type === \"edit\" && isFirstLoad) {\n    setNewColumns(\n      board.columns.map((col) => {\n        return { ...col, id: uuidv4() };\n      })\n    );\n    setName(board.name);\n    setIsFirstLoad(false);\n  }\n\n  const validate = () => {\n    setIsValid(false);\n    if (!name.trim()) {\n      return false;\n    }\n    for (let i = 0; i < newColumns.length; i++) {\n      if (!newColumns[i].name.trim()) {\n        return false;\n      }\n    }\n    setIsValid(true);\n    return true;\n  };\n\n  const onChange = (id, newValue) => {\n    setNewColumns((prevState) => {\n      const newState = [...prevState];\n      const column = newState.find((col) => col.id === id);\n      column.name = newValue;\n      return newState;\n    });\n  };\n\n  const onDelete = (id) => {\n    setNewColumns((prevState) => prevState.filter((el) => el.id !== id));\n  };\n\n  const onSubmit = (type) => {\n    setIsBoardModalOpen(false);\n    if (type === \"add\") {\n      dispatch(boardsSlice.actions.addBoard({ name, newColumns }));\n    } else {\n      dispatch(boardsSlice.actions.editBoard({ name, newColumns }));\n    }\n  };\n\n  return (\n    <div\n      className=\"modal-container dimmed\"\n      onClick={(e) => {\n        if (e.target !== e.currentTarget) {\n          return;\n        }\n        setIsBoardModalOpen(false);\n      }}\n    >\n      <div className=\"modal\">\n        <h3>{type === \"edit\" ? \"Edit\" : \"Add new\"} board</h3>\n        <label htmlFor=\"board-name-input\">Board Name</label>\n        <div className=\"input-container\">\n          <input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"board-name-input\"\n            type=\"text\"\n            placeholder=\"e.g. Web Design\"\n            className={!isValid && !name.trim() ? \"red-border\" : \"\"}\n          />\n          {!isValid && !name.trim() && (\n            <span className=\"cant-be-empty-span text-L\"> Can't be empty</span>\n          )}\n        </div>\n\n        <label>Board Columns</label>\n        <div className=\"modal-columns\">\n          {newColumns.map((column, index) => {\n            return (\n              <div className=\"modal-column\" key={index}>\n                <div className=\"input-container\">\n                  <input\n                    onChange={(e) => {\n                      onChange(column.id, e.target.value);\n                    }}\n                    type=\"text\"\n                    value={column.name}\n                    className={\n                      !isValid && !column.name.trim() ? \"red-border\" : \"\"\n                    }\n                  />\n                  {!isValid && !column.name.trim() && (\n                    <span className=\"cant-be-empty-span text-L\">\n                      {\" \"}\n                      Can't be empty\n                    </span>\n                  )}\n                </div>\n                <img\n                  src={crossIcon}\n                  alt=\"delete-column-icon\"\n                  onClick={() => {\n                    onDelete(column.id);\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n\n        <button\n          onClick={() => {\n            setNewColumns((state) => [\n              ...state,\n              { name: \"\", tasks: [], id: uuidv4() },\n            ]);\n          }}\n          className=\"add-column-btn btn-light\"\n        >\n          + Add New Column\n        </button>\n        <button\n          onClick={() => {\n            const isValid = validate();\n            if (isValid === true) onSubmit(type);\n          }}\n          className=\"create-btn\"\n        >\n          {type === \"add\" ? \"Create New Board\" : \"Save Changes\"}\n        </button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}