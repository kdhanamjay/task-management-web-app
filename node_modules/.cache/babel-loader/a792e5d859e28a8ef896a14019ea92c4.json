{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amararajavidyalayam\\\\Downloads\\\\task-management-web-app\\\\src\\\\components\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TaskModal from \"../modals/TaskModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Task(_ref) {\n  _s();\n\n  let {\n    taskIndex,\n    colIndex\n  } = _ref;\n  const boards = useSelector(state => state.boards);\n  const board = boards.find(board => board.isActive === true);\n  const columns = board.columns;\n  const col = columns.find((col, i) => i === colIndex);\n  const task = col.tasks.find((task, i) => i === taskIndex);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  let completed = 0;\n  let subtasks = task.subtasks;\n  subtasks.forEach(subtask => {\n    if (subtask.isCompleted) {\n      completed++;\n    }\n  });\n\n  const handleOnDrag = e => {\n    e.dataTransfer.setData(\"text\", JSON.stringify({\n      taskIndex,\n      prevColIndex: colIndex\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      draggable: true,\n      onDragStart: handleOnDrag,\n      className: \"task\",\n      onClick: () => {\n        setIsTaskModalOpen(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-title heading-M\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"num-of-subtasks text-M\",\n        children: [completed, \" of \", subtasks.length, \" subtasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isTaskModalOpen && /*#__PURE__*/_jsxDEV(TaskModal, {\n      colIndex: colIndex,\n      taskIndex: taskIndex,\n      setIsTaskModalOpen: setIsTaskModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"Ka+1p1naI1nPVu6Ys57zySGCHWo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useSelector","TaskModal","Task","taskIndex","colIndex","boards","state","board","find","isActive","columns","col","i","task","tasks","isTaskModalOpen","setIsTaskModalOpen","completed","subtasks","forEach","subtask","isCompleted","handleOnDrag","e","dataTransfer","setData","JSON","stringify","prevColIndex","title","length"],"sources":["C:/Users/Amararajavidyalayam/Downloads/task-management-web-app/src/components/Task.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TaskModal from \"../modals/TaskModal\";\n\nexport default function Task({ taskIndex, colIndex }) {\n  const boards = useSelector((state) => state.boards);\n  const board = boards.find((board) => board.isActive === true);\n  const columns = board.columns;\n  const col = columns.find((col, i) => i === colIndex);\n  const task = col.tasks.find((task, i) => i === taskIndex);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n\n  let completed = 0;\n  let subtasks = task.subtasks;\n  subtasks.forEach((subtask) => {\n    if (subtask.isCompleted) {\n      completed++;\n    }\n  });\n\n  const handleOnDrag = (e) => {\n    e.dataTransfer.setData(\"text\", JSON.stringify({taskIndex, prevColIndex: colIndex}));\n  }\n\n  return (\n    <div>\n      <div\n        draggable\n        onDragStart={handleOnDrag}\n        className=\"task\"\n        onClick={() => {\n          setIsTaskModalOpen(true);\n        }}\n      >\n        <p className=\"task-title heading-M\">{task.title}</p>\n        <p className=\"num-of-subtasks text-M\">\n          {completed} of {subtasks.length} subtasks\n        </p>\n      </div>\n      {isTaskModalOpen && (\n        <TaskModal\n          colIndex={colIndex}\n          taskIndex={taskIndex}\n          setIsTaskModalOpen={setIsTaskModalOpen}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,eAAe,SAASC,IAAT,OAAuC;EAAA;;EAAA,IAAzB;IAAEC,SAAF;IAAaC;EAAb,CAAyB;EACpD,MAAMC,MAAM,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;EACA,MAAME,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAaD,KAAD,IAAWA,KAAK,CAACE,QAAN,KAAmB,IAA1C,CAAd;EACA,MAAMC,OAAO,GAAGH,KAAK,CAACG,OAAtB;EACA,MAAMC,GAAG,GAAGD,OAAO,CAACF,IAAR,CAAa,CAACG,GAAD,EAAMC,CAAN,KAAYA,CAAC,KAAKR,QAA/B,CAAZ;EACA,MAAMS,IAAI,GAAGF,GAAG,CAACG,KAAJ,CAAUN,IAAV,CAAe,CAACK,IAAD,EAAOD,CAAP,KAAaA,CAAC,KAAKT,SAAlC,CAAb;EACA,MAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;EAEA,IAAIkB,SAAS,GAAG,CAAhB;EACA,IAAIC,QAAQ,GAAGL,IAAI,CAACK,QAApB;EACAA,QAAQ,CAACC,OAAT,CAAkBC,OAAD,IAAa;IAC5B,IAAIA,OAAO,CAACC,WAAZ,EAAyB;MACvBJ,SAAS;IACV;EACF,CAJD;;EAMA,MAAMK,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAe;MAACxB,SAAD;MAAYyB,YAAY,EAAExB;IAA1B,CAAf,CAA/B;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MACE,SAAS,MADX;MAEE,WAAW,EAAEkB,YAFf;MAGE,SAAS,EAAC,MAHZ;MAIE,OAAO,EAAE,MAAM;QACbN,kBAAkB,CAAC,IAAD,CAAlB;MACD,CANH;MAAA,wBAQE;QAAG,SAAS,EAAC,sBAAb;QAAA,UAAqCH,IAAI,CAACgB;MAA1C;QAAA;QAAA;QAAA;MAAA,QARF,eASE;QAAG,SAAS,EAAC,wBAAb;QAAA,WACGZ,SADH,UACkBC,QAAQ,CAACY,MAD3B;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAcGf,eAAe,iBACd,QAAC,SAAD;MACE,QAAQ,EAAEX,QADZ;MAEE,SAAS,EAAED,SAFb;MAGE,kBAAkB,EAAEa;IAHtB;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA5CuBd,I;UACPF,W;;;KADOE,I"},"metadata":{},"sourceType":"module"}