{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amararajavidyalayam\\\\Downloads\\\\kanban-task-management-web-app\\\\src\\\\modals\\\\TaskModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/TaskModals.css\";\nimport Subtask from \"../components/Subtask\";\nimport ElipsisMenu from \"../components/ElipsisMenu\";\nimport DeleteModal from \"./DeleteModal\";\nimport elipsis from \"../assets/icon-vertical-ellipsis.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport AddEditTaskModal from \"./AddEditTaskModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskModal(_ref) {\n  _s();\n\n  let {\n    taskIndex,\n    colIndex,\n    setIsTaskModalOpen\n  } = _ref;\n  const dispatch = useDispatch();\n  const [isElipsisMenuOpen, setIsElipsisMenuOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const boards = useSelector(state => state.boards);\n  const board = boards.find(board => board.isActive === true);\n  const columns = board.columns;\n  const col = columns.find((col, i) => i === colIndex);\n  const task = col.tasks.find((task, i) => i === taskIndex);\n  const subtasks = task.subtasks;\n  let completed = 0;\n  subtasks.forEach(subtask => {\n    if (subtask.isCompleted) {\n      completed++;\n    }\n  });\n  const [status, setStatus] = useState(task.status);\n  const [newColIndex, setNewColIndex] = useState(columns.indexOf(col));\n\n  const onChange = e => {\n    setStatus(e.target.value);\n    setNewColIndex(e.target.selectedIndex);\n  };\n\n  const onClose = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    dispatch(boardsSlice.actions.setTaskStatus({\n      taskIndex,\n      colIndex,\n      newColIndex,\n      status\n    }));\n    setIsTaskModalOpen(false);\n  };\n\n  const onDeleteBtnClick = e => {\n    if (e.target.textContent === \"Delete\") {\n      dispatch(boardsSlice.actions.deleteTask({\n        taskIndex,\n        colIndex\n      }));\n      setIsTaskModalOpen(false);\n      setIsDeleteModalOpen(false);\n    } else {\n      setIsDeleteModalOpen(false);\n    }\n  };\n\n  const [isAddTaskModalOpen, setIsAddTaskModalOpen] = useState(false);\n\n  const setOpenEditModal = () => {\n    setIsAddTaskModalOpen(true);\n    setIsElipsisMenuOpen(false);\n  };\n\n  const setOpenDeleteModal = () => {\n    setIsElipsisMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal-container ${!isDeleteModalOpen && \"dimmed\"}`,\n    onClick: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-modal ${isDeleteModalOpen && \"none\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-modal-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"heading-L\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"task-modal-elipsis\",\n          src: elipsis,\n          alt: \"task options btn\",\n          onClick: () => setIsElipsisMenuOpen(prevState => !prevState)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), isElipsisMenuOpen && /*#__PURE__*/_jsxDEV(ElipsisMenu, {\n          setOpenEditModal: setOpenEditModal,\n          setOpenDeleteModal: setOpenDeleteModal,\n          type: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-description text-L\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtasks-completed heading-S\",\n        children: [\"Subtasks (\", completed, \" of \", subtasks.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), subtasks.map((subtask, index) => {\n        return /*#__PURE__*/_jsxDEV(Subtask, {\n          index: index,\n          taskIndex: taskIndex,\n          colIndex: colIndex\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-column-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-M\",\n          children: \"Current Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-status text-L\",\n          value: status,\n          onChange: onChange,\n          children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"status-options\",\n            children: col.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      onDeleteBtnClick: onDeleteBtnClick,\n      type: \"task\",\n      title: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), isAddTaskModalOpen && /*#__PURE__*/_jsxDEV(AddEditTaskModal, {\n      setIsAddTaskModalOpen: setIsAddTaskModalOpen,\n      setIsTaskModalOpen: setIsTaskModalOpen,\n      type: \"edit\",\n      taskIndex: taskIndex,\n      prevColIndex: colIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskModal, \"0gbQu8h+twMLj+RwsBFdCNlw4WQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Subtask","ElipsisMenu","DeleteModal","elipsis","boardsSlice","AddEditTaskModal","TaskModal","taskIndex","colIndex","setIsTaskModalOpen","dispatch","isElipsisMenuOpen","setIsElipsisMenuOpen","isDeleteModalOpen","setIsDeleteModalOpen","boards","state","board","find","isActive","columns","col","i","task","tasks","subtasks","completed","forEach","subtask","isCompleted","status","setStatus","newColIndex","setNewColIndex","indexOf","onChange","e","target","value","selectedIndex","onClose","currentTarget","actions","setTaskStatus","onDeleteBtnClick","textContent","deleteTask","isAddTaskModalOpen","setIsAddTaskModalOpen","setOpenEditModal","setOpenDeleteModal","title","prevState","description","length","map","index","name"],"sources":["C:/Users/Amararajavidyalayam/Downloads/kanban-task-management-web-app/src/modals/TaskModal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/TaskModals.css\";\nimport Subtask from \"../components/Subtask\";\nimport ElipsisMenu from \"../components/ElipsisMenu\";\nimport DeleteModal from \"./DeleteModal\";\nimport elipsis from \"../assets/icon-vertical-ellipsis.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport AddEditTaskModal from \"./AddEditTaskModal\";\n\nexport default function TaskModal({ taskIndex, colIndex, setIsTaskModalOpen}) {\n  const dispatch = useDispatch();\n  const [isElipsisMenuOpen, setIsElipsisMenuOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const boards = useSelector((state) => state.boards);\n  const board = boards.find((board) => board.isActive === true);\n  const columns = board.columns;\n  const col = columns.find((col, i) => i === colIndex);\n  const task = col.tasks.find((task, i) => i === taskIndex);\n  const subtasks = task.subtasks;\n\n  let completed = 0;\n  subtasks.forEach((subtask) => {\n    if (subtask.isCompleted) {\n      completed++;\n    }\n  });\n\n  const [status, setStatus] = useState(task.status);\n  const [newColIndex, setNewColIndex] = useState(columns.indexOf(col));\n  const onChange = (e) => {\n    setStatus(e.target.value);\n    setNewColIndex(e.target.selectedIndex);\n  };\n\n  const onClose = (e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    dispatch(\n      boardsSlice.actions.setTaskStatus({\n        taskIndex,\n        colIndex,\n        newColIndex,\n        status,\n      })\n    );\n    setIsTaskModalOpen(false)\n  };\n\n  const onDeleteBtnClick = (e) => {\n    if (e.target.textContent === \"Delete\") {\n      dispatch(boardsSlice.actions.deleteTask({ taskIndex, colIndex }));\n      setIsTaskModalOpen(false)\n      setIsDeleteModalOpen(false)\n    } else {\n      setIsDeleteModalOpen(false)\n    }\n  };\n\n  const [isAddTaskModalOpen, setIsAddTaskModalOpen] = useState(false);\n\n  const setOpenEditModal = () => {\n    setIsAddTaskModalOpen(true);\n    setIsElipsisMenuOpen(false)\n  };\n\n  const setOpenDeleteModal = () => {\n    setIsElipsisMenuOpen(false)\n    setIsDeleteModalOpen(true)\n  };\n\n  return (\n    <div\n      className={`modal-container ${!isDeleteModalOpen && \"dimmed\"}`}\n      onClick={onClose}\n    >\n      <div className={`task-modal ${isDeleteModalOpen && \"none\"}`}>\n        <div className=\"task-modal-title-container\">\n          <p className=\"heading-L\">{task.title}</p>\n          <img\n            className=\"task-modal-elipsis\"\n            src={elipsis}\n            alt=\"task options btn\"\n            onClick={() =>\n              setIsElipsisMenuOpen((prevState) => !prevState)\n            }\n          />\n          {isElipsisMenuOpen && (\n            <ElipsisMenu\n              setOpenEditModal={setOpenEditModal}\n              setOpenDeleteModal={setOpenDeleteModal}\n              type=\"Task\"\n            />\n          )}\n        </div>\n        <p className=\"task-description text-L\">{task.description}</p>\n\n        <p className=\"subtasks-completed heading-S\">\n          Subtasks ({completed} of {subtasks.length})\n        </p>\n        {subtasks.map((subtask, index) => {\n          return (\n            <Subtask\n              index={index}\n              taskIndex={taskIndex}\n              colIndex={colIndex}\n              key={index}\n            />\n          );\n        })}\n\n        <div className=\"select-column-container\">\n          <label className=\"text-M\">Current Status</label>\n          <select\n            className=\"select-status text-L\"\n            value={status}\n            onChange={onChange}\n          >\n            {columns.map((col, index) => (\n              <option className=\"status-options\" key={index}>{col.name}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {isDeleteModalOpen && (\n        <DeleteModal\n          onDeleteBtnClick={onDeleteBtnClick}\n          type=\"task\"\n          title={task.title}\n        />\n      )}\n\n      {isAddTaskModalOpen && (\n        <AddEditTaskModal\n          setIsAddTaskModalOpen={setIsAddTaskModalOpen}\n          setIsTaskModalOpen={setIsTaskModalOpen}\n          type=\"edit\"\n          taskIndex={taskIndex}\n          prevColIndex={colIndex}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}