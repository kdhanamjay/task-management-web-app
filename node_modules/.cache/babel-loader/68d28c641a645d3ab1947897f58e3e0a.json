{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amararajavidyalayam\\\\Downloads\\\\kanban-task-management-web-app\\\\src\\\\components\\\\HeaderDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport boardIcon from \"../assets/icon-board.svg\";\nimport darkIcon from \"../assets/icon-dark-theme.svg\";\nimport lightIcon from \"../assets/icon-light-theme.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport themeSlice from \"../redux/themeSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HeaderDropdown(_ref) {\n  _s();\n\n  let {\n    setOpenDropdown,\n    setIsBoardModalOpen\n  } = _ref;\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.boards);\n  const theme = useSelector(state => state.theme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    onClick: e => {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n\n      setOpenDropdown(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"ALL BOARDS (\", boards.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-boards\",\n        children: [boards.map((board, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dropdown-board ${board.isActive ? \"board-active\" : \"\"}`,\n            onClick: () => {\n              dispatch(boardsSlice.actions.setBoardActive({\n                index\n              }));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"filter-white\",\n              src: boardIcon,\n              alt: \"board\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), \" \", board.name]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-board dropdown-create-board-btn\",\n          onClick: () => {\n            setIsBoardModalOpen(true);\n            setOpenDropdown && setOpenDropdown(state => !state);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"filter-purple\",\n            alt: \"board\",\n            src: boardIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \" + Create New Board\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: lightIcon,\n          alt: \"sun indicating light mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: theme === \"dark\",\n            onChange: () => dispatch(themeSlice.actions.toggleTheme())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: darkIcon,\n          alt: \"moon indicating dark mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HeaderDropdown, \"NgLzAOBLNzdo0CGTyBs+ztrn878=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = HeaderDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderDropdown\");","map":{"version":3,"names":["React","useDispatch","useSelector","boardIcon","darkIcon","lightIcon","boardsSlice","themeSlice","HeaderDropdown","setOpenDropdown","setIsBoardModalOpen","dispatch","boards","state","theme","e","target","currentTarget","length","map","board","index","isActive","actions","setBoardActive","name","toggleTheme"],"sources":["C:/Users/Amararajavidyalayam/Downloads/kanban-task-management-web-app/src/components/HeaderDropdown.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport boardIcon from \"../assets/icon-board.svg\";\nimport darkIcon from \"../assets/icon-dark-theme.svg\";\nimport lightIcon from \"../assets/icon-light-theme.svg\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport themeSlice from \"../redux/themeSlice\";\n\nexport default function HeaderDropdown({\n  setOpenDropdown,\n  setIsBoardModalOpen,\n}) {\n  const dispatch = useDispatch();\n  const boards = useSelector((state) => state.boards);\n  const theme = useSelector((state) => state.theme);\n\n  return (\n    <div\n      className=\"dropdown-container\"\n      onClick={(e) => {\n        if (e.target !== e.currentTarget) {\n          return;\n        }\n        setOpenDropdown(false);\n      }}\n    >\n      <div className=\"dropdown-modal\">\n        <h3>ALL BOARDS ({boards.length})</h3>\n        <div className=\"dropdown-boards\">\n          {boards.map((board, index) => {\n            return (\n              <div\n                className={`dropdown-board ${\n                  board.isActive ? \"board-active\" : \"\"\n                }`}\n                key={index}\n                onClick={() => {\n                  dispatch(boardsSlice.actions.setBoardActive({ index }));\n                }}\n              >\n                <img className=\"filter-white\" src={boardIcon} alt=\"board\" />{\" \"}\n                {board.name}\n              </div>\n            );\n          })}\n          <div\n            className=\"dropdown-board dropdown-create-board-btn\"\n            onClick={() => {\n              setIsBoardModalOpen(true);\n              setOpenDropdown && setOpenDropdown((state) => !state);\n            }}\n          >\n            <img className=\"filter-purple\" alt=\"board\" src={boardIcon} /> +\n            Create New Board\n          </div>\n        </div>\n\n        <div className=\"theme-toggle\">\n          <img src={lightIcon} alt=\"sun indicating light mode\" />\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              checked={theme === \"dark\"}\n              onChange={() => dispatch(themeSlice.actions.toggleTheme())}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n          <img src={darkIcon} alt=\"moon indicating dark mode\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}