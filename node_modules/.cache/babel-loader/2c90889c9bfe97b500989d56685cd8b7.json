{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amararajavidyalayam\\\\Downloads\\\\task-management-web-app\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/Header.css\";\nimport logo from \"../assets/logo-mobile.svg\";\nimport addTaskMobile from \"../assets/icon-add-task-mobile.svg\";\nimport iconDown from \"../assets/icon-chevron-down.svg\";\nimport iconUp from \"../assets/icon-chevron-up.svg\"; //import elipsis from \"../assets/icon-vertical-ellipsis.svg\";\n\nimport HeaderDropdown from \"./HeaderDropdown\";\nimport ElipsisMenu from \"./ElipsisMenu.js\";\nimport AddEditTaskModal from \"../modals/AddEditTaskModal\";\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\nimport DeleteModal from \"../modals/DeleteModal\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const isBigScreen = useMediaQuery({\n    query: \"(min-width: 768px)\"\n  });\n  const dispatch = useDispatch();\n  const boards = useSelector(state => state.boards);\n  const board = boards.find(board => board.isActive);\n  const [openDropdown, setOpenDropdown] = useState(false);\n  const [isElipsisMenuOpen, setIsElipsisMenuOpen] = useState(false);\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const [boardType, setBoardType] = useState(\"\");\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n\n  const onDropdownClick = () => {\n    setOpenDropdown(state => !state);\n    setIsElipsisMenuOpen(false);\n    setBoardType(\"add\");\n  };\n\n  const setOpenEditModal = () => {\n    setIsBoardModalOpen(true);\n    setIsElipsisMenuOpen(false);\n  };\n\n  const setOpenDeleteModal = () => {\n    setIsDeleteModalOpen(true);\n    setIsElipsisMenuOpen(false);\n  };\n\n  const onDeleteBtnClick = e => {\n    if (e.target.textContent === \"Delete\") {\n      dispatch(boardsSlice.actions.deleteBoard());\n      dispatch(boardsSlice.actions.setBoardActive({\n        index: 0\n      }));\n      setIsDeleteModalOpen(false);\n    } else {\n      setIsDeleteModalOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-name-container heading-L\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"header-name\",\n          children: board.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), !isBigScreen && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: openDropdown ? iconUp : iconDown,\n          alt: \"dropdown opened/closed\",\n          onClick: () => {\n            onDropdownClick();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `add-task-btn heading-M ${board.columns.length === 0 && \"btn-off\"}`,\n        onClick: () => {\n          setIsTaskModalOpen(true);\n          setIsElipsisMenuOpen(false);\n        },\n        disabled: board.columns.length === 0,\n        children: isBigScreen ? \"+ Add New Task\" : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addTaskMobile,\n          alt: \"add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          setIsElipsisMenuOpen(prevState => !prevState);\n          setBoardType(\"edit\");\n        },\n        className: \"elipsis\",\n        src: elipsis,\n        alt: \"menu for deleting or editing board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), openDropdown && !isBigScreen && /*#__PURE__*/_jsxDEV(HeaderDropdown, {\n        setOpenDropdown: setOpenDropdown,\n        setIsBoardModalOpen: setIsBoardModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), isElipsisMenuOpen && /*#__PURE__*/_jsxDEV(ElipsisMenu, {\n        setOpenEditModal: setOpenEditModal,\n        setOpenDeleteModal: setOpenDeleteModal,\n        type: \"board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isBoardModalOpen && /*#__PURE__*/_jsxDEV(AddEditBoardModal, {\n      type: boardType,\n      setIsBoardModalOpen: setIsBoardModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      type: \"board\",\n      title: board.name,\n      onDeleteBtnClick: onDeleteBtnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), isTaskModalOpen && /*#__PURE__*/_jsxDEV(AddEditTaskModal, {\n      setIsAddTaskModalOpen: setIsTaskModalOpen,\n      type: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"1QZuBfhgU4WJPlj5QANPQzPHMDw=\", false, function () {\n  return [useMediaQuery, useDispatch, useSelector];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","logo","addTaskMobile","iconDown","iconUp","HeaderDropdown","ElipsisMenu","AddEditTaskModal","AddEditBoardModal","DeleteModal","boardsSlice","useMediaQuery","Header","isBigScreen","query","dispatch","boards","state","board","find","isActive","openDropdown","setOpenDropdown","isElipsisMenuOpen","setIsElipsisMenuOpen","isBoardModalOpen","setIsBoardModalOpen","boardType","setBoardType","isDeleteModalOpen","setIsDeleteModalOpen","isTaskModalOpen","setIsTaskModalOpen","onDropdownClick","setOpenEditModal","setOpenDeleteModal","onDeleteBtnClick","e","target","textContent","actions","deleteBoard","setBoardActive","index","name","columns","length","prevState","elipsis"],"sources":["C:/Users/Amararajavidyalayam/Downloads/task-management-web-app/src/components/Header.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/Header.css\";\nimport logo from \"../assets/logo-mobile.svg\";\nimport addTaskMobile from \"../assets/icon-add-task-mobile.svg\";\nimport iconDown from \"../assets/icon-chevron-down.svg\";\nimport iconUp from \"../assets/icon-chevron-up.svg\";\n//import elipsis from \"../assets/icon-vertical-ellipsis.svg\";\nimport HeaderDropdown from \"./HeaderDropdown\";\nimport ElipsisMenu from \"./ElipsisMenu.js\";\nimport AddEditTaskModal from \"../modals/AddEditTaskModal\";\nimport AddEditBoardModal from \"../modals/AddEditBoardModal\";\nimport DeleteModal from \"../modals/DeleteModal\";\nimport boardsSlice from \"../redux/boardsSlice\";\nimport { useMediaQuery } from \"react-responsive\";\n\nexport default function Header() {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 768px)\" });\n  const dispatch = useDispatch();\n  const boards = useSelector((state) => state.boards);\n  const board = boards.find((board) => board.isActive);\n\n  const [openDropdown, setOpenDropdown] = useState(false);\n  const [isElipsisMenuOpen, setIsElipsisMenuOpen] = useState(false);\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const [boardType, setBoardType] = useState(\"\");\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n\n  const onDropdownClick = () => {\n    setOpenDropdown((state) => !state);\n    setIsElipsisMenuOpen(false);\n    setBoardType(\"add\");\n  };\n\n  const setOpenEditModal = () => {\n    setIsBoardModalOpen(true);\n    setIsElipsisMenuOpen(false);\n  };\n  const setOpenDeleteModal = () => {\n    setIsDeleteModalOpen(true);\n    setIsElipsisMenuOpen(false);\n  };\n\n  const onDeleteBtnClick = (e) => {\n    if (e.target.textContent === \"Delete\") {\n      dispatch(boardsSlice.actions.deleteBoard());\n      dispatch(boardsSlice.actions.setBoardActive({ index: 0 }));\n      setIsDeleteModalOpen(false);\n    } else {\n      setIsDeleteModalOpen(false);\n    }\n  };\n\n  return (\n    <div className=\"header-container\">\n      <header>\n     \n\n        <div className=\"header-name-container heading-L\">\n          <h3 className=\"header-name\">{board.name}</h3>\n          {!isBigScreen && (\n            <img\n              src={openDropdown ? iconUp : iconDown}\n              alt=\"dropdown opened/closed\"\n              onClick={() => {\n                onDropdownClick();\n              }}\n            />\n          )}\n        </div>\n        <button\n          className={`add-task-btn heading-M ${board.columns.length === 0 && \"btn-off\"}`}\n          onClick={() => {\n            setIsTaskModalOpen(true);\n            setIsElipsisMenuOpen(false);\n          }}\n          disabled={board.columns.length === 0}\n        >\n          {isBigScreen ? (\n            \"+ Add New Task\"\n          ) : (\n            <img src={addTaskMobile} alt=\"add task\" />\n          )}\n        </button>\n        <img\n          onClick={() => {\n            setIsElipsisMenuOpen((prevState) => !prevState);\n            setBoardType(\"edit\");\n          }}\n          className=\"elipsis\"\n          src={elipsis}\n          alt=\"menu for deleting or editing board\"\n        />\n\n        {openDropdown && !isBigScreen && (\n          <HeaderDropdown\n            setOpenDropdown={setOpenDropdown}\n            setIsBoardModalOpen={setIsBoardModalOpen}\n          />\n        )}\n        {isElipsisMenuOpen && (\n          <ElipsisMenu\n            setOpenEditModal={setOpenEditModal}\n            setOpenDeleteModal={setOpenDeleteModal}\n            type=\"board\"\n          />\n        )}\n      </header>\n      {isBoardModalOpen && (\n        <AddEditBoardModal\n          type={boardType}\n          setIsBoardModalOpen={setIsBoardModalOpen}\n        />\n      )}\n      {isDeleteModalOpen && (\n        <DeleteModal\n          type=\"board\"\n          title={board.name}\n          onDeleteBtnClick={onDeleteBtnClick}\n        />\n      )}\n      {isTaskModalOpen && (\n        <AddEditTaskModal\n          setIsAddTaskModalOpen={setIsTaskModalOpen}\n          type=\"add\"\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}